import React from 'react';
import { View, Text, TouchableOpacity, StyleSheet, Alert, TextInput } from 'react-native';
import { useAppDispatch, useAppSelector } from '@/hooks/store.hooks';
import {
  getHasNotificationPermissions,
  getNotificationSettings,
  getScheduledNotifications
} from '@/store/notifications/selectors';
import {
  requestNotificationPermissions,
  updateNotificationSettings,
  getScheduledNotifications as getScheduledNotificationsAction,
  cleanupPastNotifications
} from '@/store/notifications/notifications';
import { addPersonAction } from '@/store/actions';
import { notificationsRepository } from '@/data-base/notifications-db';
import { birthdayNotificationService } from '@/services/birthday-notification-service';
import dayjs from 'dayjs';
import * as Notifications from 'expo-notifications';
import DateTimePicker from '@react-native-community/datetimepicker';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤—Ä–µ–º–µ–Ω–∏ –≤ —á–∏—Ç–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç
const formatTimeUntilNotification = (notificationDate: string, currentTime?: dayjs.Dayjs): string => {
  const now = currentTime || dayjs();
  const notification = dayjs(notificationDate);
  const diffSeconds = notification.diff(now, 'second');

  if (diffSeconds < 0) {
    return '–ü—Ä–æ—à–ª–æ';
  }

  if (diffSeconds < 60) {
    return `${diffSeconds} —Å–µ–∫`;
  }

  const minutes = Math.floor(diffSeconds / 60);
  const remainingSeconds = diffSeconds % 60;

  if (minutes < 60) {
    // –î–ª—è –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–≤ –º–µ–Ω–µ–µ —á–∞—Å–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–∏–Ω—É—Ç—ã –∏ —Å–µ–∫—É–Ω–¥—ã
    if (minutes < 10) {
      return `${minutes} –º–∏–Ω ${remainingSeconds} —Å–µ–∫`;
    }
    return `${minutes} –º–∏–Ω`;
  }

  const hours = Math.floor(minutes / 60);
  const remainingMinutes = minutes % 60;
  if (hours < 24) {
    return `${hours} —á ${remainingMinutes} –º–∏–Ω`;
  }

  const days = Math.floor(hours / 24);
  const remainingHours = hours % 24;
  if (days < 7) {
    return `${days} –¥–Ω ${remainingHours} —á`;
  }

  const weeks = Math.floor(days / 7);
  const remainingDays = days % 7;
  if (weeks < 4) {
    return `${weeks} –Ω–µ–¥ ${remainingDays} –¥–Ω`;
  }

  const months = Math.floor(weeks / 4);
  const remainingWeeks = weeks % 4;
  if (months < 12) {
    return `${months} –º–µ—Å ${remainingWeeks} –Ω–µ–¥`;
  }

  const years = Math.floor(months / 12);
  const remainingMonths = months % 12;
  return `${years} –≥ ${remainingMonths} –º–µ—Å`;
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å—Ç–∏–ª—è —Ç–∞–π–º–µ—Ä–∞
const getTimerStyle = (notificationDate: string, currentTime?: dayjs.Dayjs) => {
  const now = currentTime || dayjs();
  const notification = dayjs(notificationDate);
  const diffSeconds = notification.diff(now, 'second');

  if (diffSeconds < 0) {
    return { color: '#999' }; // –ü—Ä–æ—à–µ–¥—à–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è - —Å–µ—Ä—ã–π
  } else if (diffSeconds < 60) {
    return { color: '#ff4444', fontWeight: 'bold' as const }; // –ú–µ–Ω–µ–µ –º–∏–Ω—É—Ç—ã - –∫—Ä–∞—Å–Ω—ã–π, –∂–∏—Ä–Ω—ã–π
  } else if (diffSeconds < 300) { // –ú–µ–Ω–µ–µ 5 –º–∏–Ω—É—Ç
    return { color: '#ff8800', fontWeight: 'bold' as const }; // –û—Ä–∞–Ω–∂–µ–≤—ã–π, –∂–∏—Ä–Ω—ã–π
  } else if (diffSeconds < 3600) { // –ú–µ–Ω–µ–µ —á–∞—Å–∞
    return { color: '#ffaa00' }; // –ñ–µ–ª—Ç—ã–π
  } else {
    return { color: '#333' }; // –û–±—ã—á–Ω—ã–π —Ü–≤–µ—Ç
  }
};

export const NotificationTest: React.FC = () => {
  const dispatch = useAppDispatch();
  const hasPermissions = useAppSelector(getHasNotificationPermissions);
  const settings = useAppSelector(getNotificationSettings);
  const scheduledNotifications = useAppSelector(getScheduledNotifications);

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞–π–º–µ—Ä–∞
  const [currentTime, setCurrentTime] = React.useState(dayjs());

  // –≠—Ñ—Ñ–µ–∫—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
  React.useEffect(() => {
    // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    if (scheduledNotifications.length === 0) {
      return;
    }

    const interval = setInterval(() => {
      setCurrentTime(dayjs());
    }, 1000);

    return () => clearInterval(interval);
  }, [scheduledNotifications.length]);

  const handleRequestPermissions = () => {
    dispatch(requestNotificationPermissions());
  };

  const handleAddTestPerson = () => {
    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ —Å –¥–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏—è —á–µ—Ä–µ–∑ 2 –º–µ—Å—è—Ü–∞
    const testBirthday = new Date();
    testBirthday.setMonth(testBirthday.getMonth() + 2);
    testBirthday.setDate(15); // 15 —á–∏—Å–ª–æ

    const testPerson = {
      id: 'test-person-' + Date.now(),
      name: '–¢–µ—Å—Ç–æ–≤—ã–π —á–µ–ª–æ–≤–µ–∫',
      birthday: testBirthday.toISOString().split('T')[0], // YYYY-MM-DD —Ñ–æ—Ä–º–∞—Ç
      description: '–¢–µ—Å—Ç–æ–≤—ã–π —á–µ–ª–æ–≤–µ–∫ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π',
      photoPath: undefined,
    };

    dispatch(addPersonAction(testPerson));
  };

  const handleResetSettings = async () => {
    try {
      await notificationsRepository.resetToDefaultSettings();
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ Redux
      const newSettings = await notificationsRepository.getSettings();
      if (newSettings) {
        dispatch(updateNotificationSettings(newSettings));
      }
    } catch (error) {
      console.error('Failed to reset settings:', error);
    }
  };

  const handleGetScheduled = () => {
    dispatch(getScheduledNotificationsAction());
  };

  const handleCleanup = () => {
    dispatch(cleanupPastNotifications());
  };

  const handleTestQuickNotification = async () => {
    try {
      // –¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
      await Notifications.scheduleNotificationAsync({
        content: {
          title: 'üß™ –¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ',
          body: '–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã!',
          data: {
            test: true,
            timestamp: new Date().toISOString()
          },
        },
        trigger: { type: 'timeInterval', seconds: 5, repeats: false } as any,
      });

      console.log('[TEST] –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞ 5 —Å–µ–∫—É–Ω–¥');
    } catch (error) {
      console.error('[TEST] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', error);
    }
  };

  const handleTestBackgroundNotification = async () => {
    try {
      // –¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã –≤ —Ñ–æ–Ω–µ
      await Notifications.scheduleNotificationAsync({
        content: {
          title: 'üåô –¢–µ—Å—Ç –≤ —Ñ–æ–Ω–µ',
          body: '–≠—Ç–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–∏–π—Ç–∏ –¥–∞–∂–µ –µ—Å–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ!',
          data: {
            test: true,
            background: true,
            timestamp: new Date().toISOString()
          },
        },
        trigger: { type: 'timeInterval', seconds: 30, repeats: false } as any,
      });

      console.log('[TEST] –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ —Ñ–æ–Ω–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞ 30 —Å–µ–∫—É–Ω–¥');
      console.log('[TEST] –ó–∞–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –ø–æ–¥–æ–∂–¥–∏—Ç–µ 30 —Å–µ–∫—É–Ω–¥');
    } catch (error) {
      console.error('[TEST] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ —Ñ–æ–Ω–µ:', error);
    }
  };

  const handleAddTestPersonSoon = () => {
    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ —Å –¥–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏—è —á–µ—Ä–µ–∑ 2 –º–∏–Ω—É—Ç—ã
    const testBirthday = new Date();
    testBirthday.setMinutes(testBirthday.getMinutes() + 2); // –ß–µ—Ä–µ–∑ 2 –º–∏–Ω—É—Ç—ã

    const testPerson = {
      id: 'test-person-soon-' + Date.now(),
      name: '–¢–µ—Å—Ç —á–µ—Ä–µ–∑ 2 –º–∏–Ω—É—Ç—ã',
      birthday: testBirthday.toISOString().split('T')[0], // YYYY-MM-DD —Ñ–æ—Ä–º–∞—Ç
      description: '–¢–µ—Å—Ç–æ–≤—ã–π —á–µ–ª–æ–≤–µ–∫ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —á–µ—Ä–µ–∑ 2 –º–∏–Ω—É—Ç—ã',
      photoPath: undefined,
    };

    dispatch(addPersonAction(testPerson));
  };

  const handleAddTestPersonToday = () => {
    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ —Å –¥–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏—è —Å–µ–≥–æ–¥–Ω—è
    const today = new Date();
    const currentHour = today.getHours();
    const currentMinute = today.getMinutes();

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Ä–µ–º—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ 3 –º–∏–Ω—É—Ç—ã –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
    const notificationTime = new Date();
    notificationTime.setMinutes(notificationTime.getMinutes() + 3);

    console.log(`[TEST] –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: ${currentHour}:${currentMinute}`);
    console.log(`[TEST] –í—Ä–µ–º—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: ${notificationTime.getHours()}:${notificationTime.getMinutes()}`);

    const testPerson = {
      id: 'test-person-today-' + Date.now(),
      name: '–¢–µ—Å—Ç —Å–µ–≥–æ–¥–Ω—è',
      birthday: today.toISOString().split('T')[0], // YYYY-MM-DD —Ñ–æ—Ä–º–∞—Ç
      description: '–¢–µ—Å—Ç–æ–≤—ã–π —á–µ–ª–æ–≤–µ–∫ —Å –¥–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏—è —Å–µ–≥–æ–¥–Ω—è',
      photoPath: undefined,
    };

    dispatch(addPersonAction(testPerson));
  };

  const handleShowDetailedScheduled = async () => {
    try {
      const allScheduled = await Notifications.getAllScheduledNotificationsAsync();
      console.log('[TEST] –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è—Ö:');

      if (allScheduled.length === 0) {
        console.log('[TEST] –ù–µ—Ç –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ —Å–∏—Å—Ç–µ–º–µ');
        alert('–ù–µ—Ç –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ —Å–∏—Å—Ç–µ–º–µ');
        return;
      }

      let detailedInfo = `–í—Å–µ–≥–æ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ: ${allScheduled.length}\n\n`;

      allScheduled.forEach((notification, index) => {
        const trigger = notification.trigger as any;
        const triggerDate = trigger?.date ? new Date(trigger.date) : null;
        const triggerSeconds = trigger?.seconds || 0;
        const data = notification.content.data || {};

        const timeInfo = triggerDate
          ? `üìÖ ${triggerDate.toLocaleString()}`
          : `‚è±Ô∏è –ß–µ—Ä–µ–∑ ${triggerSeconds} —Å–µ–∫`;

        detailedInfo += `${index + 1}. ${notification.content.title}\n`;
        detailedInfo += `   üìÑ ${notification.content.body}\n`;
        detailedInfo += `   üîë ID: ${notification.identifier}\n`;
        detailedInfo += `   ${timeInfo}\n`;

        if (Object.keys(data).length > 0) {
          detailedInfo += `   üìä –î–∞–Ω–Ω—ã–µ: ${JSON.stringify(data)}\n`;
        }
        detailedInfo += '\n';

        console.log(`[TEST] –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ ${index + 1}:`, {
          id: notification.identifier,
          title: notification.content.title,
          body: notification.content.body,
          triggerDate: triggerDate?.toLocaleString(),
          triggerSeconds,
          data
        });
      });

      alert(detailedInfo);
    } catch (error) {
      console.error('[TEST] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:', error);
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏');
    }
  };

  const handleCheckPermissions = async () => {
    try {
      const { status } = await Notifications.getPermissionsAsync();
      console.log('[TEST] Permission status:', status);
      alert(`–°—Ç–∞—Ç—É—Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π: ${status}`);
    } catch (error) {
      console.error('[TEST] Error checking permissions:', error);
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π');
    }
  };

  const handleCheckBatteryOptimization = () => {
    Alert.alert(
      '–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –±–∞—Ç–∞—Ä–µ–∏',
      '–î–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ —Ñ–æ–Ω–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–∫–ª—é—á–∏—Ç—å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é –±–∞—Ç–∞—Ä–µ–∏ –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.\n\n' +
      '–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤:\n' +
      '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è ‚Üí People Wise ‚Üí –ë–∞—Ç–∞—Ä–µ—è ‚Üí –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –±–∞—Ç–∞—Ä–µ–∏ ‚Üí –ù–µ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å\n\n' +
      '–ò–ª–∏ –Ω–∞–π–¥–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ —Å–ø–∏—Å–∫–µ "–ù–µ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"',
      [
        { text: '–û—Ç–º–µ–Ω–∞', style: 'cancel' },
        {
          text: '–û—Ç–∫—Ä—ã—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏',
          onPress: () => {
            // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–∫—Ä—ã—Ç–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
            console.log('[TEST] User wants to open app settings');
          }
        }
      ]
    );
  };

  const handleTestMultipleNotifications = async () => {
    try {
      console.log('[TEST] –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...');

      // –ü–ª–∞–Ω–∏—Ä—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Å –Ω–µ–±–æ–ª—å—à–∏–º–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞–º–∏
      const notifications = [
        { title: 'üß™ –¢–µ—Å—Ç 1', body: '–ü–µ—Ä–≤–æ–µ —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ', delay: 10 },
        { title: 'üß™ –¢–µ—Å—Ç 2', body: '–í—Ç–æ—Ä–æ–µ —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ', delay: 15 },
        { title: 'üß™ –¢–µ—Å—Ç 3', body: '–¢—Ä–µ—Ç—å–µ —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ', delay: 20 },
        { title: 'üß™ –¢–µ—Å—Ç 4', body: '–ß–µ—Ç–≤–µ—Ä—Ç–æ–µ —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ', delay: 25 },
        { title: 'üß™ –¢–µ—Å—Ç 5', body: '–ü—è—Ç–æ–µ —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ', delay: 30 },
      ];

      for (const notification of notifications) {
        await Notifications.scheduleNotificationAsync({
          content: {
            title: notification.title,
            body: notification.body,
            data: {
              test: true,
              multiple: true,
              timestamp: new Date().toISOString(),
              delay: notification.delay
            },
          },
          trigger: { type: 'timeInterval', seconds: notification.delay, repeats: false } as any,
          identifier: `test-multiple-${notification.delay}-${Date.now()}`,
        });

        console.log(`[TEST] –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ "${notification.title}" —á–µ—Ä–µ–∑ ${notification.delay} —Å–µ–∫—É–Ω–¥`);
      }

      console.log('[TEST] –í—Å–µ —Ç–µ—Å—Ç–æ–≤—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω—ã!');
      console.log('[TEST] –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –≤—Å–µ 5 —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø—Ä–∏–¥—É—Ç —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º –≤ 5 —Å–µ–∫—É–Ω–¥');
      alert('–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ 5 —Ç–µ—Å—Ç–æ–≤—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º –≤ 5 —Å–µ–∫—É–Ω–¥');
    } catch (error) {
      console.error('[TEST] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:', error);
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π');
    }
  };

  const handleClearAllTestNotifications = async () => {
    try {
      console.log('[TEST] –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...');

      const allScheduled = await Notifications.getAllScheduledNotificationsAsync();
      let clearedCount = 0;

      for (const notification of allScheduled) {
        const data = notification.content.data as any;

        // –£–¥–∞–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ—Å—Ç–æ–≤—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        if (data && (data.test || data.multiple)) {
          await Notifications.cancelScheduledNotificationAsync(notification.identifier);
          console.log(`[TEST] –û—Ç–º–µ–Ω–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: ${notification.identifier}`);
          clearedCount++;
        }
      }

      console.log(`[TEST] –û—Ç–º–µ–Ω–µ–Ω–æ ${clearedCount} —Ç–µ—Å—Ç–æ–≤—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π`);
      alert(`–û—Ç–º–µ–Ω–µ–Ω–æ ${clearedCount} —Ç–µ—Å—Ç–æ–≤—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π`);
    } catch (error) {
      console.error('[TEST] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:', error);
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π');
    }
  };

  return (
    <View style={styles.container}>
      <Text style={styles.title}>–¢–µ—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (Development Build)</Text>

      <View style={styles.statusContainer}>
        <Text style={styles.title}>üß™ –¢–µ—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</Text>
        <Text style={styles.statusText}>
          –†–∞–∑—Ä–µ—à–µ–Ω–∏—è: {hasPermissions ? '‚úÖ –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω—ã' : '‚ùå –ù–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω—ã'}
        </Text>
        <Text style={styles.statusText}>
          –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: {currentTime.format('DD.MM.YYYY HH:mm:ss')}
        </Text>
        {settings && (
          <>
            <Text style={styles.statusText}>
              –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {settings.enabled ? '‚úÖ –í–∫–ª—é—á–µ–Ω—ã' : '‚ùå –û—Ç–∫–ª—é—á–µ–Ω—ã'}
            </Text>
            <Text style={styles.statusText}>
              –î–Ω–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {settings.daysBefore.join(', ')}
            </Text>
            <Text style={styles.statusText}>
              –í—Ä–µ–º—è: {settings.time.hours}:{settings.time.minutes.toString().padStart(2, '0')}
            </Text>
            <Text style={styles.statusText}>
              –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ: {scheduledNotifications.length}
            </Text>
          </>
        )}
      </View>

      <View style={styles.buttonContainer}>
        {/* –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ */}
        <Text style={[styles.sectionTitle, { marginTop: 0 }]}>üîß –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</Text>

        {!hasPermissions && (
          <TouchableOpacity style={styles.button} onPress={handleRequestPermissions}>
            <Text style={styles.buttonText}>–ó–∞–ø—Ä–æ—Å–∏—Ç—å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è</Text>
          </TouchableOpacity>
        )}

        <TouchableOpacity style={styles.button} onPress={handleCheckPermissions}>
          <Text style={styles.buttonText}>–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è</Text>
        </TouchableOpacity>

        <TouchableOpacity style={styles.button} onPress={handleCheckBatteryOptimization}>
          <Text style={styles.buttonText}>–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é –±–∞—Ç–∞—Ä–µ–∏</Text>
        </TouchableOpacity>

        <TouchableOpacity style={styles.button} onPress={handleAddTestPerson}>
          <Text style={styles.buttonText}>–î–æ–±–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ (—á–µ—Ä–µ–∑ 2 –º–µ—Å—è—Ü–∞)</Text>
        </TouchableOpacity>

        <TouchableOpacity style={styles.button} onPress={handleAddTestPersonSoon}>
          <Text style={styles.buttonText}>–î–æ–±–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ (—á–µ—Ä–µ–∑ 2 –º–∏–Ω—É—Ç—ã)</Text>
        </TouchableOpacity>

        <TouchableOpacity style={styles.button} onPress={handleAddTestPersonToday}>
          <Text style={styles.buttonText}>–î–æ–±–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ (—Å–µ–≥–æ–¥–Ω—è)</Text>
        </TouchableOpacity>

        <TouchableOpacity style={styles.button} onPress={handleResetSettings}>
          <Text style={styles.buttonText}>–°–±—Ä–æ—Å–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏</Text>
        </TouchableOpacity>

        {/* –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏ */}
        <Text style={styles.sectionTitle}>üìã –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏</Text>

        <TouchableOpacity style={styles.button} onPress={handleGetScheduled}>
          <Text style={styles.buttonText}>–û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</Text>
        </TouchableOpacity>

        <TouchableOpacity style={styles.button} onPress={handleShowDetailedScheduled}>
          <Text style={styles.buttonText}>–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é</Text>
        </TouchableOpacity>

        <TouchableOpacity style={styles.button} onPress={handleCleanup}>
          <Text style={styles.buttonText}>–û—á–∏—Å—Ç–∏—Ç—å –ø—Ä–æ—à–µ–¥—à–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</Text>
        </TouchableOpacity>

        <TouchableOpacity style={styles.button} onPress={async () => {
          try {
            await birthdayNotificationService.checkAndRescheduleNotifications();
            alert('–ü—Ä–æ–≤–µ—Ä–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
          } catch (error) {
            console.error('[TEST] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:', error);
            alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π');
          }
        }}>
          <Text style={styles.buttonText}>üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∏ –ø–µ—Ä–µ–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å</Text>
        </TouchableOpacity>

        {/* –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ */}
        <Text style={styles.sectionTitle}>üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ</Text>

        <TouchableOpacity style={styles.button} onPress={handleTestQuickNotification}>
          <Text style={styles.buttonText}>–¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥</Text>
        </TouchableOpacity>

        <TouchableOpacity style={styles.button} onPress={handleTestBackgroundNotification}>
          <Text style={styles.buttonText}>–¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ —Ñ–æ–Ω–µ (30 —Å–µ–∫)</Text>
        </TouchableOpacity>

        <TouchableOpacity style={styles.button} onPress={handleTestMultipleNotifications}>
          <Text style={styles.buttonText}>–¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</Text>
        </TouchableOpacity>

        <TouchableOpacity style={styles.button} onPress={handleClearAllTestNotifications}>
          <Text style={styles.buttonText}>–û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ —Ç–µ—Å—Ç–æ–≤—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</Text>
        </TouchableOpacity>
      </View>

      {scheduledNotifications.length > 0 && (
        <View style={styles.notificationsContainer}>
          <Text style={styles.subtitle}>–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:</Text>
          {scheduledNotifications.map((notification) => (
            <View key={notification.id} style={styles.notificationItem}>
              <Text style={styles.notificationText}>
                <Text style={styles.personName}>{notification.personName}</Text>
              </Text>
              <Text style={styles.notificationText}>
                üìÖ {dayjs(notification.notificationDate).format('DD.MM.YYYY HH:mm')}
              </Text>
              <Text style={[styles.notificationText, getTimerStyle(notification.notificationDate, currentTime)]}>
                ‚è±Ô∏è {formatTimeUntilNotification(notification.notificationDate, currentTime)}
              </Text>
              <Text style={styles.notificationText}>
                üìä –ó–∞ {notification.daysBefore} –¥–Ω–µ–π –¥–æ –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è
              </Text>
            </View>
          ))}
        </View>
      )}
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    padding: 20,
    backgroundColor: '#f5f5f5',
    borderRadius: 10,
    margin: 10,
  },
  title: {
    fontSize: 18,
    fontWeight: 'bold',
    marginBottom: 15,
    textAlign: 'center',
  },
  statusContainer: {
    marginBottom: 20,
  },
  statusText: {
    fontSize: 14,
    marginBottom: 5,
  },
  buttonContainer: {
    gap: 10,
  },
  button: {
    backgroundColor: '#4B7A9E',
    padding: 12,
    borderRadius: 8,
    alignItems: 'center',
  },
  buttonText: {
    color: 'white',
    fontWeight: 'bold',
  },
  notificationsContainer: {
    marginTop: 20,
  },
  subtitle: {
    fontSize: 16,
    fontWeight: 'bold',
    marginBottom: 10,
  },
  notificationItem: {
    backgroundColor: 'white',
    padding: 10,
    borderRadius: 5,
    marginBottom: 5,
  },
  notificationText: {
    fontSize: 12,
  },
  personName: {
    fontWeight: 'bold',
  },
  sectionTitle: {
    fontSize: 16,
    fontWeight: 'bold',
    marginTop: 20,
    marginBottom: 10,
    color: '#4B7A9E',
    textAlign: 'center',
  },
});
